@model MANmanager.animedata

@{
    ViewBag.Title = "Edit-Anime";
}
<form action="/Anime/Edit" method="post" enctype="multipart/form-data">
    @Html.AntiForgeryToken()
    <fieldset>
        <legend>Edit Data</legend>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)
        <div>
            @Html.LabelFor(model => model.novelid, htmlAttributes: new { @class = "control-label mt-4" })
            @Html.EditorFor(model => model.novelid, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter The Number Of Chapter" } })
            @Html.ValidationMessageFor(model => model.novelid, "", new { @class = "text-danger" })
        </div>
        <div>
            @Html.LabelFor(model => model.manhwaid, htmlAttributes: new { @class = "control-label mt-4" })
            @Html.EditorFor(model => model.manhwaid, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter The Number Of Chapter" } })
            @Html.ValidationMessageFor(model => model.manhwaid, "", new { @class = "text-danger" })
        </div>
        <div>
            @Html.LabelFor(model => model.name, htmlAttributes: new { @class = "form-label mt-4" })
            @Html.EditorFor(model => model.name, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter The Anime Name" } })
            @Html.ValidationMessageFor(model => model.name, "", new { @class = "text-danger" })
        </div>
        <div>
            @Html.LabelFor(model => model.status, htmlAttributes: new { @class = "form-label mt-4" })
            @Html.EditorFor(model => model.status, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.status, "", new { @class = "text-danger" })
        </div>
        <div>
            @Html.LabelFor(model => model.ustatus, htmlAttributes: new { @class = "form-label mt-4" })
            @Html.EditorFor(model => model.ustatus, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.ustatus, "", new { @class = "text-danger" })
        </div>
        <div>
            @Html.LabelFor(model => model.ep, htmlAttributes: new { @class = "control-label mt-4" })
            @Html.EditorFor(model => model.ep, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter The Number Of Chapter" } })
            @Html.ValidationMessageFor(model => model.ep, "", new { @class = "text-danger" })
        </div>
        <div>
            @Html.LabelFor(model => model.uep, htmlAttributes: new { @class = "control-label mt-4" })
            @Html.EditorFor(model => model.uep, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter The Number Of Chapter for User" } })
            @Html.ValidationMessageFor(model => model.uep, "", new { @class = "text-danger" })
        </div>
        <div>
            @Html.LabelFor(model => model.pic, htmlAttributes: new { @class = "control-label mt-4" })
            <input class="form-control" type="file" id="pic" name="pic">
            @Html.ValidationMessageFor(model => model.pic, "", new { @class = "text-danger" })
        </div>
        <div>
            @Html.LabelFor(model => model.genre, htmlAttributes: new { @class = "form-label mt-4" })
            @Html.EditorFor(model => model.genre, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter The Anime Gener" } })
            @Html.ValidationMessageFor(model => model.genre, "", new { @class = "text-danger" })
        </div>
        <div>
            @Html.LabelFor(model => model.name, htmlAttributes: new { @class = "control-label mt-4" })
            @Html.EditorFor(model => model.name, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.name, "", new { @class = "text-danger" })
        </div>
        <div>
            @Html.LabelFor(model => model.releasedate, htmlAttributes: new { @class = "control-label mt-4" })
            @Html.EditorFor(model => model.releasedate, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.releasedate, "", new { @class = "text-danger" })
        </div>
        <div>
            @Html.LabelFor(model => model.weblink, htmlAttributes: new { @class = "control-label mt-4" })
            @Html.EditorFor(model => model.weblink, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.weblink, "", new { @class = "text-danger" })
        </div>
        <div>
            @Html.LabelFor(model => model.desc, htmlAttributes: new { @class = "control-label mt-4" })
            <textarea class="form-control" id="desc" name="desc" rows="10">@Html.DisplayFor(model=>model.desc)</textarea>
            @Html.ValidationMessageFor(model => model.desc, "", new { @class = "text-danger" })
        </div>
        <div>
            @Html.LabelFor(model => model.rating, htmlAttributes: new { @class = "control-label mt-4" })
            @Html.EditorFor(model => model.rating, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.rating, "", new { @class = "text-danger" })
        </div>
        <div>
            @Html.LabelFor(model => model.urating, htmlAttributes: new { @class = "control-label mt-4" })
            @Html.EditorFor(model => model.urating, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.urating, "", new { @class = "text-danger" })
        </div>
        <div>
            @Html.LabelFor(model => model.studio, htmlAttributes: new { @class = "control-label mt-4" })
            @Html.EditorFor(model => model.studio, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.studio, "", new { @class = "text-danger" })
        </div>
        <div>
            @Html.LabelFor(model => model.aname, htmlAttributes: new { @class = "control-label mt-4" })
            @Html.EditorFor(model => model.aname, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.aname, "", new { @class = "text-danger" })
        </div>
        <button type="submit" value="Save" class="btn btn-primary">Save</button>
        <div>
            @Html.ActionLink("Back to Anime", "Index", "Anime")
        </div>
    </fieldset>
</form>
